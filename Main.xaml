<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.ExcelPath="C:\Users\scep\Desktop\AnmeldeVerwaltungInfoBScWI23.xlsx" this:Main.EventFee="125" this:Main.MailAccounting="scep@zhaw.ch" this:Main.EventManagerName="BjÃ¶rn" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueabf="clr-namespace:UiPath.Excel.Activities.Business.Filter;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail.Activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:umabh="clr-namespace:UiPath.Mail.Activities.Business.HtmlEditor;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="ExcelPath" Type="InArgument(x:String)" />
    <x:Property Name="EventFee" Type="InArgument(x:Int32)" />
    <x:Property Name="MailAccounting" Type="InArgument(x:String)" />
    <x:Property Name="EventManagerName" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1219,1156</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business.Filter</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="568,1091" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="RegistrationsDataTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="ToProcessDataTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="ToAcceptDataTable" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Informationen aus Anmelde-Verwaltung auslesen" sap:VirtualizedContainerService.HintSize="526,81" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="388,67" sap2010:WorkflowViewState.IdRef="ReportStatus_1" StatusText="[&quot;Lese Informationen aus &quot; + ExcelPath]" />
      <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[RegistrationsDataTable]" DisplayName="Komplette Excel-Tabelle auslesen" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Anmeldungen" WorkbookPath="[ExcelPath]" />
      <ui:FilterDataTable DataTable="[RegistrationsDataTable]" DisplayName="Filtern der zu prozessierenden Anmeldungen" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="388,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[ToProcessDataTable]" SelectColumnsMode="Remove">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Status"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["BESTAETIGEN"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Status"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["ABLEHNEN"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <ui:FilterDataTable sap2010:Annotation.AnnotationText="FÃ¼r Versand an Buchhaltung relevant, daher auch gewisse Spalten rausgenommen" DataTable="[RegistrationsDataTable]" DisplayName="ZusÃ¤tzlich filtern nach zu bestÃ¤tigenden Anmeldungen" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="388,203" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[ToAcceptDataTable]" SelectColumnsMode="Remove">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Status"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["BESTAETIGEN"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="8">
            <InArgument x:TypeArguments="x:String">["Erhalten am"]</InArgument>
            <InArgument x:TypeArguments="x:String">["Bemerkungen"]</InArgument>
            <InArgument x:TypeArguments="x:String">["Status"]</InArgument>
            <InArgument x:TypeArguments="x:String">["Abgleich-Probleme"]</InArgument>
            <InArgument x:TypeArguments="x:String">["Persoenliche Nachricht"]</InArgument>
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FilterDataTable>
    </Sequence>
    <If Condition="[ToProcessDataTable.RowCount.Equals(0)]" DisplayName="Wenn keine Personen zu bearbeiten sind, Workflow hier beenden" sap:VirtualizedContainerService.HintSize="526,52" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,178" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="Keine Anmeldungen mit Status BESTAETIGEN oder ABLEHNEN gefunden" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4" />
      </If.Else>
    </If>
    <umab:GmailApplicationCard ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" Account="vqsuda@gmail.com" DisplayName="Use Gmail" EmailAddress="vqsuda@gmail.com" sap:VirtualizedContainerService.HintSize="526,441" sap2010:WorkflowViewState.IdRef="GmailApplicationCard_3" Timeout="90" UseConnectionService="False">
      <umab:GmailApplicationCard.Body>
        <ActivityAction x:TypeArguments="um:IMailQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Gmail" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="492,261" sap2010:WorkflowViewState.IdRef="Sequence_18">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[EventFee &gt; 0 AndAlso ToAcceptDataTable.RowCount &gt; 0]" DisplayName="Anlass kostenpflichtig und mind. eine bestÃ¤tigte Anmeldung?" sap:VirtualizedContainerService.HintSize="450,52" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="538,1191" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Excel fÃ¼r Buchhaltung aufbereiten und senden" sap:VirtualizedContainerService.HintSize="496,1103" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="434,67" sap2010:WorkflowViewState.IdRef="ReportStatus_2" StatusText="[&quot;Bereite Excel-Datei fÃ¼r Buchhaltung vor&quot;]" />
                    <ui:AddDataColumn x:TypeArguments="x:Int32" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Rechnungsbetrag" DataTable="[ToAcceptDataTable]" DefaultValue="[EventFee]" DisplayName="Rechnungsbetrag-Spalte hinzufÃ¼gen" sap:VirtualizedContainerService.HintSize="434,186" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2" />
                    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[ToAcceptDataTable]" DisplayName="Datentabelle in neue temporÃ¤re Excel-Datei schreiben" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Anmeldungen" WorkbookPath="InRechnungZuStellen.xlsx" />
                    <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="434,67" sap2010:WorkflowViewState.IdRef="ReportStatus_3" StatusText="[&quot;Sende Excel-Datei an Buchhaltungsabteilung: &quot; + MailAccounting]" />
                    <umab:SendMailX Bcc="{x:Null}" Body="{x:Null}" Cc="{x:Null}" HtmlBodyFromText="{x:Null}" ReplyTo="{x:Null}" Account="[Gmail]" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="434,396" sap2010:WorkflowViewState.IdRef="SendMailX_1" Importance="Normal" IsDraft="False" MaxBodyDocumentSizeMB="2" Sensitivity="Normal" Subject="Zu verrechnende Anmeldungen" To="[MailAccounting]" UseDocumentAsBody="False">
                      <umab:SendMailX.Files>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                          <InArgument x:TypeArguments="x:String">InRechnungZuStellen.xlsx</InArgument>
                        </scg:List>
                      </umab:SendMailX.Files>
                      <umab:SendMailX.HtmlBodyFromFile>
                        <umabh:HtmlContentArgument FilePath=".data/HtmlContent0.html">
                          <umabh:HtmlContentArgument.RuntimeImages>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </umabh:HtmlContentArgument.RuntimeImages>
                          <umabh:HtmlContentArgument.ValueMappings>
                            <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="4">
                              <umabh:HtmlTextValueMapping Name="EMname" Value="[EventManagerName]" />
                            </scg:List>
                          </umabh:HtmlContentArgument.ValueMappings>
                        </umabh:HtmlContentArgument>
                      </umab:SendMailX.HtmlBodyFromFile>
                    </umab:SendMailX>
                  </Sequence>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6" />
              </If.Else>
            </If>
            <Sequence DisplayName="BestÃ¤tigung oder Ablehnung senden" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_19">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[ToProcessDataTable]" DisplayName="FÃ¼r jede zu verarbeitende Anmeldung" sap:VirtualizedContainerService.HintSize="510,1290" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,1173" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="status" />
                        <Variable x:TypeArguments="x:String" Name="finalMailSubject" />
                        <Variable x:TypeArguments="x:String" Name="finalMailBody" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="434,67" sap2010:WorkflowViewState.IdRef="ReportStatus_4" StatusText="[&quot;Sende E-Mail an Teilnehmer:in &quot; + CurrentRow(&quot;Mail-Adresse&quot;).ToString]" />
                      <Assign DisplayName="Status als lokale Variable speichern" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[status]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[CurrentRow("Status").ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Subjekt des Mails zusammenbauen" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[finalMailSubject]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[If(status.Equals("BESTAETIGEN"), "AnmeldebestÃ¤tigung", "Anmeldeablehnung") + " fÃ¼r " + CurrentRow("Event").ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Inhalt des Mails zusammenbauen" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[finalMailBody]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[If(status.Equals("BESTAETIGEN"),"Sie wurden erfolgreich angemeldet.", "Sie konnten nicht erfolgreich angemeldet werden.") + If(CurrentRow("Persoenliche Nachricht").ToString.Length&gt;0,Environment.NewLine + Environment.NewLine + "Das Event-Management hat folgende Bemerkungen angefÃ¼gt: " + CurrentRow("Persoenliche Nachricht").ToString,"")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <umab:SendMailX Bcc="{x:Null}" Cc="{x:Null}" HtmlBodyFromText="{x:Null}" ReplyTo="{x:Null}" Account="[Gmail]" Body="[finalMailBody]" BodyType="Text" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="434,380" sap2010:WorkflowViewState.IdRef="SendMailX_2" Importance="Normal" IsDraft="False" MaxBodyDocumentSizeMB="2" Sensitivity="Normal" Subject="[finalMailSubject]" To="[CurrentRow(&quot;Mail-Adresse&quot;).ToString]" UseDocumentAsBody="False">
                        <umab:SendMailX.Files>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                        </umab:SendMailX.Files>
                        <umab:SendMailX.HtmlBodyFromFile>
                          <umabh:HtmlContentArgument FilePath="{x:Null}">
                            <umabh:HtmlContentArgument.RuntimeImages>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </umabh:HtmlContentArgument.RuntimeImages>
                            <umabh:HtmlContentArgument.ValueMappings>
                              <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="0" />
                            </umabh:HtmlContentArgument.ValueMappings>
                          </umabh:HtmlContentArgument>
                        </umab:SendMailX.HtmlBodyFromFile>
                      </umab:SendMailX>
                      <ui:UpdateRowItem ColumnIndex="{x:Null}" ColumnName="Status" DisplayName="Status aktualisieren auf BESTAETIGT oder ABGELEHNT" sap:VirtualizedContainerService.HintSize="434,192" sap2010:WorkflowViewState.IdRef="UpdateRowItem_1" Row="[CurrentRow]" Value="[If(status.Equals(&quot;BESTAETIGEN&quot;),&quot;BESTAETIGT&quot;,&quot;ABGELEHNT&quot;)]" />
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </umab:GmailApplicationCard.Body>
      <umab:GmailApplicationCard.ClientId>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </umab:GmailApplicationCard.ClientId>
      <umab:GmailApplicationCard.ClientSecret>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </umab:GmailApplicationCard.ClientSecret>
    </umab:GmailApplicationCard>
    <Sequence DisplayName="Anmelde-Verwaltung aktualisieren" sap:VirtualizedContainerService.HintSize="526,81" sap2010:WorkflowViewState.IdRef="Sequence_15">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="738,67" sap2010:WorkflowViewState.IdRef="ReportStatus_5" StatusText="[&quot;Aktualisiere Status pro verarbeiteter Anmeldung in &quot; + ExcelPath]" />
      <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="738,2023" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1" ShowExcelWindow="False">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="704,1936" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="662,1848" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" TemplatePath="C:\Users\scep\Desktop\AnmeldeVerwaltungInfoBScWI23.xlsx" UseTemplate="True" WorkbookPath="[ExcelPath]">
                <ueab:ExcelApplicationCard.Body>
                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="628,1556" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[ToProcessDataTable]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="586,1259" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,1144" sap2010:WorkflowViewState.IdRef="Sequence_12">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ueab:FilterX ColumnName="{x:Null}" ClearFilter="True" DisplayName="Alle Auto-Filter zurÃ¼cksetzen" HasHeaders="True" sap:VirtualizedContainerService.HintSize="510,169" sap2010:WorkflowViewState.IdRef="FilterX_1" Range="[Excel.Sheet(&quot;Anmeldungen&quot;)]">
                                <ueab:FilterX.FilterArgument>
                                  <ueabf:FilterArgument Mode="Basic">
                                    <ueabf:FilterArgument.AdvancedFiltersArgument>
                                      <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                        <ueabf:AdvancedFilterArgument.Condition1>
                                          <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                        </ueabf:AdvancedFilterArgument.Condition1>
                                        <ueabf:AdvancedFilterArgument.Condition2>
                                          <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                        </ueabf:AdvancedFilterArgument.Condition2>
                                      </ueabf:AdvancedFilterArgument>
                                    </ueabf:FilterArgument.AdvancedFiltersArgument>
                                    <ueabf:FilterArgument.BasicFiltersArgument>
                                      <ueabf:BasicFilterArgument>
                                        <ueabf:BasicFilterArgument.BasicFilters>
                                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                                            <InArgument x:TypeArguments="x:String">[CurrentRow("Erhalten am").ToString]</InArgument>
                                          </scg:List>
                                        </ueabf:BasicFilterArgument.BasicFilters>
                                      </ueabf:BasicFilterArgument>
                                    </ueabf:FilterArgument.BasicFiltersArgument>
                                  </ueabf:FilterArgument>
                                </ueab:FilterX.FilterArgument>
                              </ueab:FilterX>
                              <ueab:FilterX ClearFilter="False" ColumnName="Mail-Adresse" DisplayName="Filtern nach Mail-Adresse" HasHeaders="True" sap:VirtualizedContainerService.HintSize="510,169" sap2010:WorkflowViewState.IdRef="FilterX_2" Range="[Excel.Sheet(&quot;Anmeldungen&quot;)]">
                                <ueab:FilterX.FilterArgument>
                                  <ueabf:FilterArgument Mode="Basic">
                                    <ueabf:FilterArgument.AdvancedFiltersArgument>
                                      <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                        <ueabf:AdvancedFilterArgument.Condition1>
                                          <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                        </ueabf:AdvancedFilterArgument.Condition1>
                                        <ueabf:AdvancedFilterArgument.Condition2>
                                          <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                        </ueabf:AdvancedFilterArgument.Condition2>
                                      </ueabf:AdvancedFilterArgument>
                                    </ueabf:FilterArgument.AdvancedFiltersArgument>
                                    <ueabf:FilterArgument.BasicFiltersArgument>
                                      <ueabf:BasicFilterArgument>
                                        <ueabf:BasicFilterArgument.BasicFilters>
                                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                                            <InArgument x:TypeArguments="x:String">[CurrentRow("Mail-Adresse").ToString]</InArgument>
                                          </scg:List>
                                        </ueabf:BasicFilterArgument.BasicFilters>
                                      </ueabf:BasicFilterArgument>
                                    </ueabf:FilterArgument.BasicFiltersArgument>
                                  </ueabf:FilterArgument>
                                </ueab:FilterX.FilterArgument>
                              </ueab:FilterX>
                              <ueab:FilterX ClearFilter="False" ColumnName="Erhalten am" DisplayName="ZusÃ¤tzlich filtern nach Empfangsdatum" HasHeaders="True" sap:VirtualizedContainerService.HintSize="510,169" sap2010:WorkflowViewState.IdRef="FilterX_3" Range="[Excel.Sheet(&quot;Anmeldungen&quot;)]">
                                <ueab:FilterX.FilterArgument>
                                  <ueabf:FilterArgument Mode="Basic">
                                    <ueabf:FilterArgument.AdvancedFiltersArgument>
                                      <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                        <ueabf:AdvancedFilterArgument.Condition1>
                                          <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                        </ueabf:AdvancedFilterArgument.Condition1>
                                        <ueabf:AdvancedFilterArgument.Condition2>
                                          <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                        </ueabf:AdvancedFilterArgument.Condition2>
                                      </ueabf:AdvancedFilterArgument>
                                    </ueabf:FilterArgument.AdvancedFiltersArgument>
                                    <ueabf:FilterArgument.BasicFiltersArgument>
                                      <ueabf:BasicFilterArgument>
                                        <ueabf:BasicFilterArgument.BasicFilters>
                                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                                            <InArgument x:TypeArguments="x:String">[CurrentRow("Erhalten am").ToString]</InArgument>
                                          </scg:List>
                                        </ueabf:BasicFilterArgument.BasicFilters>
                                      </ueabf:BasicFilterArgument>
                                    </ueabf:FilterArgument.BasicFiltersArgument>
                                  </ueabf:FilterArgument>
                                </ueab:FilterX.FilterArgument>
                              </ueab:FilterX>
                              <ueab:ExcelForEachRowX DisplayName="Jede Excel-Zeile aktualisieren (es sollte genau eine sein)" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="510,429" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_1" Range="[Excel.Sheet(&quot;Anmeldungen&quot;)]" SaveAfterEachRow="False">
                                <ueab:ExcelForEachRowX.Body>
                                  <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                    <ActivityAction.Argument1>
                                      <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentExcelRow" />
                                    </ActivityAction.Argument1>
                                    <ActivityAction.Argument2>
                                      <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                    </ActivityAction.Argument2>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,247" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:WriteCellX Cell="[CurrentExcelRow.ByField(&quot;Status&quot;)]" DisplayName="Status aktualisieren" sap:VirtualizedContainerService.HintSize="434,159" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[CurrentRow(&quot;Status&quot;).ToString]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ueab:ExcelForEachRowX.Body>
                              </ueab:ExcelForEachRowX>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                      </ui:ForEachRow>
                      <ueab:FilterX ColumnName="{x:Null}" ClearFilter="True" DisplayName="Alle Auto-Filter zurÃ¼cksetzen" HasHeaders="True" sap:VirtualizedContainerService.HintSize="586,169" sap2010:WorkflowViewState.IdRef="FilterX_4" Range="[Excel.Sheet(&quot;Anmeldungen&quot;)]">
                        <ueab:FilterX.FilterArgument>
                          <ueabf:FilterArgument Mode="Basic">
                            <ueabf:FilterArgument.AdvancedFiltersArgument>
                              <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                <ueabf:AdvancedFilterArgument.Condition1>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition1>
                                <ueabf:AdvancedFilterArgument.Condition2>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition2>
                              </ueabf:AdvancedFilterArgument>
                            </ueabf:FilterArgument.AdvancedFiltersArgument>
                            <ueabf:FilterArgument.BasicFiltersArgument>
                              <ueabf:BasicFilterArgument>
                                <ueabf:BasicFilterArgument.BasicFilters>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                                    <InArgument x:TypeArguments="x:String">[CurrentRow("Erhalten am").ToString]</InArgument>
                                  </scg:List>
                                </ueabf:BasicFilterArgument.BasicFilters>
                              </ueabf:BasicFilterArgument>
                            </ueabf:FilterArgument.BasicFiltersArgument>
                          </ueabf:FilterArgument>
                        </ueab:FilterX.FilterArgument>
                      </ueab:FilterX>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelApplicationCard.Body>
              </ueab:ExcelApplicationCard>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
      </ueab:ExcelProcessScopeX>
    </Sequence>
    <Sequence DisplayName="Anmelde-Verwaltung Ã¶ffnen" sap:VirtualizedContainerService.HintSize="526,81" sap2010:WorkflowViewState.IdRef="Sequence_16">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Excel-Datei Ã¶ffnen (Start Process)" FileName="[ExcelPath]" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
    </Sequence>
    <ui:ReportStatus DisplayName="Anmeldungen verarbeitet" sap:VirtualizedContainerService.HintSize="526,67" sap2010:WorkflowViewState.IdRef="ReportStatus_6" StatusText="[&quot;Anmeldungen verarbeitet&quot;]" />
  </Sequence>
</Activity>